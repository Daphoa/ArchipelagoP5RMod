
// 
// FlowScript decompiled using Atlus Script Tools by TGE (2017-2021)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "fscr0151_010_105.bf.msg" );

// 
// Script-level variable definitions
// 

int sVar0;
int sVar1;
int sVar2;
int sVar3;
int sVar7;
int sVar8;
int sVar9;
int sVar18;
int sVar17;
int sVar23;
int sVar28;
int sVar29;

// 
// Procedure declarations
// 

// Procedure Index: 0
void General_0151_010_105()
{

}


// Procedure Index: 1
void D01_04_e165_045()
{
    FLD_SMP_EVENT_BEGIN( 0 );
    sVar0 = FLD_PC_GET_RESHND( 0 );
    sVar1 = -1;
    sVar2 = -1;
    sVar3 = -1;
    event_member_setup();
    FLD_CAMERA_LOCK();
    EVT_FAST_PROC_START();
    FADEIN( 0, 10 );
    FADE_SYNC();
    WAIT( 15 );
    FLD_GET_FIX_ITEM( ( 0x4000 + 116 ), 1 );
    SYNC();
    SET_ITEM_NUM( ( 0x4000 + 116 ), 1 );
    MSG_WND_DSP();
    MSG( D01_04_e165_045_mes01 );
    MSG_WND_CLS();
    MSG_WND_DSP();
    MSG( D01_04_e165_045_mes02 );
    MSG_WND_CLS();
    MSG_WND_DSP();
    MSG( D01_04_e165_045_mes03 );
    MSG_WND_CLS();
    MSG_WND_DSP();
    MSG( D01_04_e165_045_mes04 );
    MSG_WND_CLS();
    MSG_WND_DSP();
    MSG( D01_04_e165_045_mes05 );
    MSG_WND_CLS();
    event_member_release();
    EVT_FAST_PROC_END();
    FLD_SMP_EVENT_END( 0 );
    FLD_CAMERA_SYNC_INTERP();
    FLD_CAMERA_UNLOCK();
}


// Procedure Index: 2
void D01_04_e165_055()
{
    EVT_FAST_PROC_START();
    FLD_SMP_EVENT_BEGIN( 0 );
    sVar0 = FLD_PC_GET_RESHND( 0 );
    sVar1 = -1;
    sVar2 = -1;
    sVar3 = -1;
    event_member_setup();
    FLD_CAMERA_LOCK();
    FADEIN( 0, 10 );
    FADE_SYNC();
    WAIT( 15 );
    FLD_GET_FIX_ITEM( ( 0x4000 + 117 ), 1 );
    SYNC();
    SET_ITEM_NUM( ( 0x4000 + 117 ), 1 );
    MSG_WND_DSP();
    MSG( D01_04_e165_055_mes01 );
    MSG_WND_CLS();
    EVT_FAST_PROC_END();
    event_member_release();
    FLD_SMP_EVENT_END( 0 );
    FLD_CAMERA_SYNC_INTERP();
    FLD_CAMERA_UNLOCK();
}


// Procedure Index: 3
void event_member_setup()
{
    int var4;
    int var5;
    int var6;
    int var10;
    int var11;
    var4 = sVar1;
    var5 = sVar2;
    var6 = sVar3;
    _choice_member();
    var10 = 1;
    _4:
    
    if ( var10 < 4 )
    {
        var11 = FLD_PC_GET_RESHND( var10 );
        
        if ( var11 > 0 )
        {
            FLD_MODEL_SET_VISIBLE( var11, 0, 0 );
        }

        var10 = ( var10 + 1 );
        goto _4;
    }

    _make_handle();
    sVar1 = sVar7;
    sVar2 = sVar8;
    sVar3 = sVar9;
}


// Procedure Index: 4
void event_member_release()
{
    int var12;
    int var13;
    FLD_PTY_RESET_BUF();
    sVar23 = sVar7;
    _release_handle();
    sVar23 = sVar8;
    _release_handle();
    sVar23 = sVar9;
    _release_handle();
    var12 = 1;
    _8:
    
    if ( var12 < 4 )
    {
        var13 = FLD_PC_GET_RESHND( var12 );
        
        if ( var13 > 0 )
        {
            FLD_MODEL_SET_VISIBLE( var13, 1, 0 );
        }

        var12 = ( var12 + 1 );
        goto _8;
    }

}


// Procedure Index: 5
void _choice_member()
{
    int var14;
    int var15;
    
    if ( sVar1 == -1 )
    {
        sVar1 = 0;
        var14 = 1;
        _12:
        
        if ( var14 < 4 )
        {
            var15 = FLD_PC_GET_ID( var14 );
            
            if ( var15 != 0 )
            {
                sVar17 = var15;
                _check_fix_member();
                
                if ( sVar18 == 0 )
                {
                    sVar1 = sVar17;
                    goto _13;
                }

            }

            var14 = ( var14 + 1 );
            goto _12;
        }

        _13:
    }

    
    if ( sVar2 == -1 )
    {
        sVar2 = 0;
        var14 = 1;
        _20:
        
        if ( var14 < 4 )
        {
            var15 = FLD_PC_GET_ID( var14 );
            
            if ( var15 != 0 )
            {
                sVar17 = var15;
                _check_fix_member();
                
                if ( sVar18 == 0 )
                {
                    sVar2 = sVar17;
                    goto _21;
                }

            }

            var14 = ( var14 + 1 );
            goto _20;
        }

        _21:
    }

    
    if ( sVar3 == -1 )
    {
        sVar3 = 0;
        var14 = 1;
        _28:
        
        if ( var14 < 4 )
        {
            var15 = FLD_PC_GET_ID( var14 );
            
            if ( var15 != 0 )
            {
                sVar17 = var15;
                _check_fix_member();
                
                if ( sVar18 == 0 )
                {
                    sVar3 = sVar17;
                    goto _29;
                }

            }

            var14 = ( var14 + 1 );
            goto _28;
        }

        _29:
    }

}


// Procedure Index: 6
void _check_fix_member()
{
    sVar18 = 0;
    
    if ( ( sVar17 <= 1 ) || ( sVar17 >= 11 ) )
    {
        return;
    }

    
    if ( sVar17 == sVar1 )
    {
        sVar18 = 1;
        return;
    }

    
    if ( sVar17 == sVar2 )
    {
        sVar18 = 1;
        return;
    }

    
    if ( sVar17 == sVar3 )
    {
        sVar18 = 1;
        return;
    }

}


// Procedure Index: 7
void _make_handle()
{
    int var20;
    int var21;
    int var22;
    int var19;
    var20 = 50;
    var21 = 0;
    var22 = 51;
    
    if ( FLD_CHECK_MOUSE() )
    {
        var20 = 99;
        var22 = 99;
    }

    sVar7 = -1;
    
    if ( sVar1 != 0 )
    {
        var19 = FLD_PC_ID_GET_RESHND( sVar1 );
        sVar7 = var19;
        
        if ( var19 == -1 )
        {
            sVar7 = FLD_NPC_MODEL_LOAD_BASE( sVar1, var20, 0, var22 );
            FLD_MODEL_LOADSYNC( sVar7 );
            var21 = ( var21 + 1 );
        }

        FLD_MODEL_SET_VISIBLE( sVar7, 1, 0 );
        FLD_PTY_ADD_BUF( sVar7, 0 );
    }

    sVar8 = -1;
    
    if ( sVar2 != 0 )
    {
        var19 = FLD_PC_ID_GET_RESHND( sVar2 );
        sVar8 = var19;
        
        if ( var19 == -1 )
        {
            sVar8 = FLD_NPC_MODEL_LOAD_BASE( sVar2, var20, 0, var22 );
            FLD_MODEL_LOADSYNC( sVar8 );
            var21 = ( var21 + 1 );
        }

        FLD_MODEL_SET_VISIBLE( sVar8, 1, 0 );
        FLD_PTY_ADD_BUF( sVar8, 1 );
    }

    sVar9 = -1;
    
    if ( sVar3 != 0 )
    {
        var19 = FLD_PC_ID_GET_RESHND( sVar3 );
        sVar9 = var19;
        
        if ( var19 == -1 )
        {
            sVar9 = FLD_NPC_MODEL_LOAD_BASE( sVar3, var20, 0, var22 );
            FLD_MODEL_LOADSYNC( sVar9 );
            var21 = ( var21 + 1 );
        }

        FLD_MODEL_SET_VISIBLE( sVar9, 1, 0 );
        FLD_PTY_ADD_BUF( sVar9, 2 );
    }

}


// Procedure Index: 8
void _release_handle()
{
    int var24;
    int var25;
    
    if ( sVar23 > 0 )
    {
        var24 = 1;
        _58:
        
        if ( var24 < 4 )
        {
            var25 = FLD_PC_GET_RESHND( var24 );
            
            if ( var25 == sVar23 )
            {
                goto _59;
            }

            var24 = ( var24 + 1 );
            goto _58;
        }

        _59:
        
        if ( var24 == 4 )
        {
            FLD_MODEL_SET_VISIBLE( sVar23, 0, 0 );
            FLD_MODEL_FREE( sVar23 );
        }

    }

    sVar23 = 0;
}


// Procedure Index: 9
void motion_wait()
{
    int var26;
    var26 = FLD_PC_GET_RESHND( 0 );
    
    if ( MDL_GET_ANIM( var26 ) != 0 )
    {
        FLD_MODEL_ANIM( var26, 0, 0, 5, 1.00f );
    }

}


// Procedure Index: 10
void motion_event_wait()
{
    int var27;
    var27 = FLD_PC_GET_RESHND( 0 );
    
    if ( MDL_GET_ANIM( var27 ) != 58 )
    {
        FLD_MODEL_ANIM( var27, 58, 0, 5, 1.00f );
    }

}


// Procedure Index: 11
void add_motion_CONSOLE()
{
    int var30;
    var30 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var30, 57 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 1.00f );
    sVar29 = 2;
}


// Procedure Index: 12
void add_motion_TAKE()
{
    int var31;
    var31 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var31, 84 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 1.00f );
    sVar29 = 2;
}


// Procedure Index: 13
void add_motion_GIMMICK_TAKE()
{
    int var32;
    var32 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var32, 86 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 1.00f );
    sVar29 = 1;
}


// Procedure Index: 14
void add_motion_GIMMICK_PUT()
{
    int var33;
    var33 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var33, 87 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 1.00f );
    sVar29 = 1;
}


// Procedure Index: 15
void add_motion_DOOR_OPEN()
{
    int var34;
    var34 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var34, 90 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 0.70f );
    sVar29 = 1;
}


// Procedure Index: 16
void add_motion_DOOR_NOT_OPEN()
{
    int var35;
    var35 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var35, 91 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 0.70f );
    sVar29 = 1;
}


// Procedure Index: 17
void add_motion_DOOR_KICK()
{
    int var36;
    var36 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var36, 92 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 0.70f );
    sVar29 = 1;
}


// Procedure Index: 18
void add_motion_SWITCH()
{
    int var37;
    var37 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var37, 93 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 1.00f );
    sVar29 = 1;
}


// Procedure Index: 19
void add_motion_SWITCH_NONE()
{
    int var38;
    var38 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var38, 94 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 1.00f );
    sVar29 = 1;
}


// Procedure Index: 20
void add_motion_SWITCH_L()
{
    int var39;
    var39 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var39, 96 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 0.70f );
    sVar29 = 1;
}


// Procedure Index: 21
void add_motion_SWITCH_L_NONE()
{
    int var40;
    var40 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var40, 97 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 0.70f );
    sVar29 = 1;
}


// Procedure Index: 22
void add_motion_CARD_IN()
{
    int var41;
    var41 = FLD_PC_GET_RESHND( 0 );
    sVar28 = FLD_MODEL_CLONE_ADDMOTION( var41, 81 );
    FLD_MODEL_ANIM( sVar28, ( 60 + 0 ), 0, 3, 0.70f );
    sVar29 = 2;
}


// Procedure Index: 23
void add_motion_wait()
{
    int var42;
    var42 = FLD_PC_GET_RESHND( 0 );
    FLD_MODEL_ANIM_SYNC( sVar28 );
    
    if ( sVar29 == 1 )
    {
        FLD_MODEL_ANIM( sVar28, 0, 1, 5, 1.00f );
    }
    else if ( sVar29 == 2 )
    {
        FLD_MODEL_ANIM( sVar28, 58, 1, 5, 1.00f );
    }

    FLD_MODEL_REVERT_ADDMOTION( var42, sVar28 );
    sVar28 = 0;
    sVar29 = 0;
}


// Procedure Index: 24
void talk_motion()
{
    int var43;
    int var44;
    var44 = FLD_PC_ID_GET_RESHND( var43 );
    
    if ( var44 != -1 )
    {
        FLD_MODEL_TALK_ANIM( var44 );
    }

}

