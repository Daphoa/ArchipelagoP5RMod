
// 
// FlowScript decompiled using Atlus Script Tools by TGE (2017-2021)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "FSCR0151_005_120.BF.msg" );

// 
// Script-level variable definitions
// 

int sVar0;
int sVar2;
int sVar3;
int sVar4;
int sVar8;
int sVar9;
int sVar10;
int sVar19;
int sVar18;
int sVar24;
int sVar29;
int sVar30;

// 
// Procedure declarations
// 

// Procedure Index: 0
void General_0151_005_120()
{
    // bit id (536870912) + (193) = 6337
    
    // if ( GET_COUNT( 145 ) == 43550 )
    // {
    //     DO1_005_EX_SUGGESTION();
    // }
    // else if ( BIT_CHK( ( 0x20000000 + 193 ) ) == 0 )
    // {
    //     DO1_005_EX_01();
    // }

}


// Procedure Index: 1
void DO1_005_EX_SUGGESTION()
{
    FLD_CAMERA_LOCK();
    FLD_CAMERA_LOCK_INTERP( 8101.863f, 1022.655f, -4801.102f, 0.0001f, 0.6676f, -0.0001f, 0.7445f, 25 );
    FLD_CAMERA_LOCK_SYNC_INTERP();
    EVT_FAST_PROC_START();
    FLD_WAIT( 7 );
    MSG_WND_DSP();
    MSG( D01_ex_e490_000_mes01 );
    MSG_WND_CLS();
    FLD_WAIT( 15 );
    FLD_CAMERA_LOCK_INTERP( 6566.552f, 1067.427f, -4839.012f, -0.0049f, 0.6661f, 0.0043f, 0.7458f, 45 );
    FLD_WAIT( 15 );
    MSG_WND_DSP();
    MSG( D01_ex_e490_000_mes02 );
    MSG_WND_CLS();
    FADEOUT( 5, 10 );
    FADE_SYNC();
    EVT_FAST_PROC_END();
    FLD_RESET_PARTY_LOOKAT( sVar0 );
    FLD_CAMERA_LOCK_SYNC_INTERP();
    FLD_CAMERA_INTERP( 20 );
    FLD_CAMERA_SYNC_INTERP();
    FLD_CAMERA_UNLOCK();
    // bit id (536870912) + (4634) = 10778
    BIT_ON( ( 0x20000000 + 4634 ) );
    FADEIN( 5, 20 );
    FADE_SYNC();
}


// Procedure Index: 2
void DO1_005_EX_01()
{
    float fVar0;
    float fVar1;
    float fVar2;
    fVar0 = 3507.00f;
    fVar1 = 800.00f;
    fVar2 = -5822.00f;
    FLD_CAMERA_LOCK();
    FLD_CAMERA_LOCK_INTERP( 4006.441f, 969.3002f, -4669.389f, -0.0141f, 0.4629f, 0.0074f, 0.8863f, 10 );
    FLD_CAMERA_LOCK_SYNC_INTERP();
    EVT_FAST_PROC_START();
    FLD_WAIT( 7 );
    MSG_WND_DSP();
    MSG( D01_ex_e490_001_mes01 );
    MSG_WND_CLS();
    FLD_WAIT( 15 );
    FLD_CAMERA_LOCK_INTERP( 3574.092f, 1035.686f, -4868.52f, -0.0489f, 0.064f, 0.0031f, 0.9967f, 45 );
    sVar2 = FLD_PC_GET_RESHND( 1 );
    sVar3 = FLD_PC_GET_RESHND( 2 );
    sVar4 = FLD_PC_GET_RESHND( 3 );
    
    if ( sVar2 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( sVar2, fVar0, fVar1, fVar2, 15 );
        MDL_ANIM( sVar2, 1, 1, 0, 1.00f );
        FLD_ROTATE_END_ANIM( sVar2, 0, 1, 0, 1.00f );
    }

    
    if ( sVar3 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( sVar3, fVar0, fVar1, fVar2, 15 );
        MDL_ANIM( sVar3, 1, 1, 0, 1.00f );
        FLD_ROTATE_END_ANIM( sVar3, 0, 1, 0, 1.00f );
    }

    
    if ( sVar4 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( sVar4, fVar0, fVar1, fVar2, 15 );
        MDL_ANIM( sVar4, 1, 1, 0, 1.00f );
        FLD_ROTATE_END_ANIM( sVar4, 0, 1, 0, 1.00f );
    }

    sVar0 = FLD_PC_GET_RESHND( 0 );
    
    if ( sVar0 > 0 )
    {
        FLD_MODEL_POINT_ROTATE( sVar0, fVar0, fVar1, fVar2, 15 );
        FLD_MODEL_SYNC_ROTATE( sVar0 );
        FLD_MODEL_RUN_TRANSLATE( sVar0, 3557.00f, 800.00f, -5300.00f );
        FLD_UNIT_SET_RUN( sVar0 );
        FLD_MODEL_SYNC_TRANSLATE( sVar0 );
    }

    FADEOUT( 5, 10 );
    FADE_SYNC();
    FLD_MODEL_SYNC_TRANSLATE( sVar0 );
    sVar2 = FLD_PC_GET_RESHND( 1 );
    sVar3 = FLD_PC_GET_RESHND( 2 );
    sVar4 = FLD_PC_GET_RESHND( 3 );
    FLD_MODEL_SET_TRANSLATE( sVar0, 3507.00f, 772.00f, -5822.00f, 0 );
    FLD_MODEL_SET_ROTATE( sVar0, 0.00f, 180.00f, 0.00f, 0 );
    FLD_MODEL_SYNC_TRANSLATE( sVar0 );
    FLD_ALLY_SET_WAIT( 1 );
    FLD_PTY_MODEL_SET_STD_POS();
    FLD_PTY_MODEL_SET_VISIBLE( 1, 0 );
    
    if ( sVar2 > 0 )
    {
        FLD_MODEL_SET_TRANSLATE( sVar2, 3357.00f, 772.00f, -5822.00f, 0 );
    }

    
    if ( sVar3 > 0 )
    {
        FLD_MODEL_SET_TRANSLATE( sVar3, 3447.00f, 781.00f, -5742.00f, 0 );
    }

    
    if ( sVar4 > 0 )
    {
        FLD_MODEL_SET_TRANSLATE( sVar4, 3580.00f, 800.00f, -5662.00f, 0 );
    }

    FLD_CAMERA_LOCK_SYNC_INTERP();
    FLD_CAMERA_UNLOCK();
    FLD_CAMERA_LOCK();
    FLD_CAMERA_LOCK_INTERP( 3455.13f, 1172.247f, -5330.457f, -0.2164f, -0.0085f, -0.0019f, 0.9763f, 0 );
    FLD_CAMERA_LOCK_SYNC_INTERP();
    FADEIN( 5, 20 );
    FADE_SYNC();
    FLD_WAIT( 15 );
    MSG_WND_DSP();
    MSG( D01_ex_e490_001_mes02 );
    MSG_WND_CLS();
    FLD_MODEL_TALK_ANIM( sVar2 );
    MSG_WND_DSP();
    MSG( D01_ex_e490_001_mes03 );
    MSG_WND_CLS();
    FADEOUT( 5, 10 );
    FADE_SYNC();
    EVT_FAST_PROC_END();
    FLD_UNIT_SET_WAIT( sVar0 );
    FLD_RESET_PARTY_LOOKAT( sVar0 );
    FLD_CAMERA_LOCK_SYNC_INTERP();
    FLD_CAMERA_INTERP( 20 );
    FLD_CAMERA_SYNC_INTERP();
    FLD_CAMERA_UNLOCK();
    // bit id (536870912) + (193) = 6337
    BIT_ON( ( 0x20000000 + 193 ) );
    FADEIN( 5, 20 );
    FADE_SYNC();
}


// Procedure Index: 3
void event_member_setup()
{
    int var5;
    int var6;
    int var7;
    int var11;
    int var12;
    var5 = sVar2;
    var6 = sVar3;
    var7 = sVar4;
    _choice_member();
    var11 = 1;
    _18:
    
    if ( var11 < 4 )
    {
        var12 = FLD_PC_GET_RESHND( var11 );
        
        if ( var12 > 0 )
        {
            FLD_MODEL_SET_VISIBLE( var12, 0, 0 );
        }

        var11 = ( var11 + 1 );
        goto _18;
    }

    _make_handle();
    sVar2 = sVar8;
    sVar3 = sVar9;
    sVar4 = sVar10;
}


// Procedure Index: 4
void event_member_release()
{
    int var13;
    int var14;
    FLD_PTY_RESET_BUF();
    sVar24 = sVar8;
    _release_handle();
    sVar24 = sVar9;
    _release_handle();
    sVar24 = sVar10;
    _release_handle();
    var13 = 1;
    _22:
    
    if ( var13 < 4 )
    {
        var14 = FLD_PC_GET_RESHND( var13 );
        
        if ( var14 > 0 )
        {
            FLD_MODEL_SET_VISIBLE( var14, 1, 0 );
        }

        var13 = ( var13 + 1 );
        goto _22;
    }

}


// Procedure Index: 5
void _choice_member()
{
    int var15;
    int var16;
    
    if ( sVar2 == -1 )
    {
        sVar2 = 0;
        var15 = 1;
        _26:
        
        if ( var15 < 4 )
        {
            var16 = FLD_PC_GET_ID( var15 );
            
            if ( var16 != 0 )
            {
                sVar18 = var16;
                _check_fix_member();
                
                if ( sVar19 == 0 )
                {
                    sVar2 = sVar18;
                    goto _27;
                }

            }

            var15 = ( var15 + 1 );
            goto _26;
        }

        _27:
    }

    
    if ( sVar3 == -1 )
    {
        sVar3 = 0;
        var15 = 1;
        _34:
        
        if ( var15 < 4 )
        {
            var16 = FLD_PC_GET_ID( var15 );
            
            if ( var16 != 0 )
            {
                sVar18 = var16;
                _check_fix_member();
                
                if ( sVar19 == 0 )
                {
                    sVar3 = sVar18;
                    goto _35;
                }

            }

            var15 = ( var15 + 1 );
            goto _34;
        }

        _35:
    }

    
    if ( sVar4 == -1 )
    {
        sVar4 = 0;
        var15 = 1;
        _42:
        
        if ( var15 < 4 )
        {
            var16 = FLD_PC_GET_ID( var15 );
            
            if ( var16 != 0 )
            {
                sVar18 = var16;
                _check_fix_member();
                
                if ( sVar19 == 0 )
                {
                    sVar4 = sVar18;
                    goto _43;
                }

            }

            var15 = ( var15 + 1 );
            goto _42;
        }

        _43:
    }

}


// Procedure Index: 6
void _check_fix_member()
{
    sVar19 = 0;
    
    if ( ( sVar18 <= 1 ) || ( sVar18 >= 11 ) )
    {
        return;
    }

    
    if ( sVar18 == sVar2 )
    {
        sVar19 = 1;
        return;
    }

    
    if ( sVar18 == sVar3 )
    {
        sVar19 = 1;
        return;
    }

    
    if ( sVar18 == sVar4 )
    {
        sVar19 = 1;
        return;
    }

}


// Procedure Index: 7
void _make_handle()
{
    int var21;
    int var22;
    int var23;
    int var20;
    var21 = 50;
    var22 = 0;
    var23 = 51;
    
    if ( FLD_CHECK_MOUSE() )
    {
        var21 = 99;
        var23 = 99;
    }

    sVar8 = -1;
    
    if ( sVar2 != 0 )
    {
        var20 = FLD_PC_ID_GET_RESHND( sVar2 );
        sVar8 = var20;
        
        if ( var20 == -1 )
        {
            sVar8 = FLD_NPC_MODEL_LOAD_BASE( sVar2, var21, 0, var23 );
            FLD_MODEL_LOADSYNC( sVar8 );
            var22 = ( var22 + 1 );
        }

        FLD_MODEL_SET_VISIBLE( sVar8, 1, 0 );
        FLD_PTY_ADD_BUF( sVar8, 0 );
    }

    sVar9 = -1;
    
    if ( sVar3 != 0 )
    {
        var20 = FLD_PC_ID_GET_RESHND( sVar3 );
        sVar9 = var20;
        
        if ( var20 == -1 )
        {
            sVar9 = FLD_NPC_MODEL_LOAD_BASE( sVar3, var21, 0, var23 );
            FLD_MODEL_LOADSYNC( sVar9 );
            var22 = ( var22 + 1 );
        }

        FLD_MODEL_SET_VISIBLE( sVar9, 1, 0 );
        FLD_PTY_ADD_BUF( sVar9, 1 );
    }

    sVar10 = -1;
    
    if ( sVar4 != 0 )
    {
        var20 = FLD_PC_ID_GET_RESHND( sVar4 );
        sVar10 = var20;
        
        if ( var20 == -1 )
        {
            sVar10 = FLD_NPC_MODEL_LOAD_BASE( sVar4, var21, 0, var23 );
            FLD_MODEL_LOADSYNC( sVar10 );
            var22 = ( var22 + 1 );
        }

        FLD_MODEL_SET_VISIBLE( sVar10, 1, 0 );
        FLD_PTY_ADD_BUF( sVar10, 2 );
    }

}


// Procedure Index: 8
void _release_handle()
{
    int var25;
    int var26;
    
    if ( sVar24 > 0 )
    {
        var25 = 1;
        _72:
        
        if ( var25 < 4 )
        {
            var26 = FLD_PC_GET_RESHND( var25 );
            
            if ( var26 == sVar24 )
            {
                goto _73;
            }

            var25 = ( var25 + 1 );
            goto _72;
        }

        _73:
        
        if ( var25 == 4 )
        {
            FLD_MODEL_SET_VISIBLE( sVar24, 0, 0 );
            FLD_MODEL_FREE( sVar24 );
        }

    }

    sVar24 = 0;
}


// Procedure Index: 9
void motion_wait()
{
    int var27;
    var27 = FLD_PC_GET_RESHND( 0 );
    
    if ( MDL_GET_ANIM( var27 ) != 0 )
    {
        FLD_MODEL_ANIM( var27, 0, 0, 5, 1.00f );
    }

}


// Procedure Index: 10
void motion_event_wait()
{
    int var28;
    var28 = FLD_PC_GET_RESHND( 0 );
    
    if ( MDL_GET_ANIM( var28 ) != 58 )
    {
        FLD_MODEL_ANIM( var28, 58, 0, 5, 1.00f );
    }

}


// Procedure Index: 11
void add_motion_CONSOLE()
{
    int var31;
    var31 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var31, 57 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 1.00f );
    sVar30 = 2;
}


// Procedure Index: 12
void add_motion_TAKE()
{
    int var32;
    var32 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var32, 84 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 1.00f );
    sVar30 = 2;
}


// Procedure Index: 13
void add_motion_GIMMICK_TAKE()
{
    int var33;
    var33 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var33, 86 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 1.00f );
    sVar30 = 1;
}


// Procedure Index: 14
void add_motion_GIMMICK_PUT()
{
    int var34;
    var34 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var34, 87 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 1.00f );
    sVar30 = 1;
}


// Procedure Index: 15
void add_motion_DOOR_OPEN()
{
    int var35;
    var35 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var35, 90 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 0.70f );
    sVar30 = 1;
}


// Procedure Index: 16
void add_motion_DOOR_NOT_OPEN()
{
    int var36;
    var36 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var36, 91 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 0.70f );
    sVar30 = 1;
}


// Procedure Index: 17
void add_motion_DOOR_KICK()
{
    int var37;
    var37 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var37, 92 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 0.70f );
    sVar30 = 1;
}


// Procedure Index: 18
void add_motion_SWITCH()
{
    int var38;
    var38 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var38, 93 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 1.00f );
    sVar30 = 1;
}


// Procedure Index: 19
void add_motion_SWITCH_NONE()
{
    int var39;
    var39 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var39, 94 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 1.00f );
    sVar30 = 1;
}


// Procedure Index: 20
void add_motion_SWITCH_L()
{
    int var40;
    var40 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var40, 96 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 0.70f );
    sVar30 = 1;
}


// Procedure Index: 21
void add_motion_SWITCH_L_NONE()
{
    int var41;
    var41 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var41, 97 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 0.70f );
    sVar30 = 1;
}


// Procedure Index: 22
void add_motion_CARD_IN()
{
    int var42;
    var42 = FLD_PC_GET_RESHND( 0 );
    sVar29 = FLD_MODEL_CLONE_ADDMOTION( var42, 81 );
    FLD_MODEL_ANIM( sVar29, ( 60 + 0 ), 0, 3, 0.70f );
    sVar30 = 2;
}


// Procedure Index: 23
void add_motion_wait()
{
    int var43;
    var43 = FLD_PC_GET_RESHND( 0 );
    FLD_MODEL_ANIM_SYNC( sVar29 );
    
    if ( sVar30 == 1 )
    {
        FLD_MODEL_ANIM( sVar29, 0, 1, 5, 1.00f );
    }
    else if ( sVar30 == 2 )
    {
        FLD_MODEL_ANIM( sVar29, 58, 1, 5, 1.00f );
    }

    FLD_MODEL_REVERT_ADDMOTION( var43, sVar29 );
    sVar29 = 0;
    sVar30 = 0;
}


// Procedure Index: 24
void talk_motion()
{
    int var44;
    int var45;
    var45 = FLD_PC_ID_GET_RESHND( var44 );
    
    if ( var45 != -1 )
    {
        FLD_MODEL_TALK_ANIM( var45 );
    }

}

